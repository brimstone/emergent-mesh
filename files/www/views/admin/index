<div class="container" ng-controller="PageCtrl">
<h1>Mesh</h1>
<input type="button" class="btn btn-{{(status.mode == 'Gateway') && 'success' || 'primary'}} meshmode" id="gateway" value="Gateway" />
<input type="button" class="btn btn-{{(status.mode == 'Standalone') && 'success' || 'primary'}} meshmode" id="standalone" value="Standalone" />
<input type="button" class="btn btn-{{(status.mode == 'Client') && 'success' || 'primary'}} meshmode" id="client" value="Client" />

<h1>Node $HOST</h1>
<div class="row">
	<div class="col-lg-1"><b>Flash</b></div>
	<div class="col-lg-1">{{status.flash.total - status.flash.used}}KB</div>
	<div class="col-lg-1">{{status.flash.total}}KB</div>
	<div class="col-lg-9">
		<div class="progress">
			<div class="progress-bar" style="width: {{status.flash.used / status.flash.total * 100}}%;"></div>
		</div>
	</div>
</div>
<div class="row">
	<div class="col-lg-1"><b>Memory</b></div>
	<div class="col-lg-1">{{status.memory.total - status.memory.used}}KB</div>
	<div class="col-lg-1">{{status.memory.total}}KB</div>
	<div class="col-lg-9">
		<div class="progress">
			<div class="progress-bar" style="width: {{status.memory.used / status.memory.total * 100}}%;"></div>
		</div>
	</div>
</div>

<h1>Clients</h1>
<table class="table table-bordered table-hover">
<tr>
	<th>MAC</th>
	<th>IP</th>
	<th>Time Authorized</th>
	<th>Signal</th>
	<th>Bitrate</th>
</tr>
	<tr ng-repeat="client in status.clients">
		<td>{{client.mac}}</td>
		<td>{{client.ip}}</td>
		<td>{{client.time}}</td>
		<td>{{client.signal}} dB</td>
		<td>{{client.bitrate}} mbps</td>
	</tr>
</table>

<h1>Other Nodes</h1>
<table class="table table-bordered table-hover">
<tr>
	<th>Hostname</th>
	<th>IP</th>
	<th>Mode</th>
</tr>
$(avahi-browse -ltrap | awk '/=;br-lan.*_mesh/' | while read anode; do
echo "	<tr>"
echo "		<td>$(echo "$anode" | awk -F\; '{print $7}')</td>"
echo "		<td>$(echo "$anode" | awk -F\; '{print $8}')</td>"
echo "		<td>$(echo "$anode" | awk -F\; '{sub(/"mode=/, "", $10); sub(/"/, "", $10); print $10}')</td>"
echo "	</tr>"
done)
</table>
</div>

<script>
\$(function() {
	var d = new Date();
	var s = parseInt(d.getTime() / 1000) - $(date +%s);
	console.log("Time is " + (s - $(date +%s)) + " seconds off");
	\$("body > .container").prepend('<div class="alert alert-error"><button type="button" class="close" data-dismiss="alert">&times;</button>Time is ' + s + ' seconds off. <input type="button" class="btn btn-small" id="btnTime" value="Fix it!"/></div>');
	\$("#btnTime").click(function() {
		var d = new Date();
		$.getJSON("/admin/time/" + parseInt(d.getTime() / 1000) + "/", function(data) {
			console.log(data);
		});
	});
});

angular.module('WebUI', ['ngResource']);
function PageCtrl(\$scope, \$resource) {
	\$scope.admin = \$resource('/admin/:action');
	\$scope.update = function () {
		var s = \$scope.admin.get({action: "status"}, function() {
			// start our flattened clients hash, indexed by mac address
			var clients = {};
			//loop through arp entries and flip them around
			for(var mac in s.arp) {
				if (!clients[mac]) { clients[mac] = {}};
				clients[mac].ip = s.arp[mac].ip;
			}
			for(var mac in s.captive) {
				if (!clients[mac]) { clients[mac] = {}};
				clients[mac].ip = s.captive[mac].ip;
				clients[mac].time = s.captive[mac].time;
			}
			for(var mac in s.station) {
				if (!clients[mac]) { clients[mac] = {}};
				clients[mac].signal = s.station[mac].signal;
				clients[mac].bitrate = s.station[mac].bitrate;
			}
			s.clients = [];
			for(var mac in clients) {
				clients[mac].mac = mac;
				if (!clients[mac].signal) { clients[mac].signal = 0; }
				if (!clients[mac].bitrate) { clients[mac].bitrate = 0; }
				if (!clients[mac].time) { clients[mac].time = 0; }
				s.clients.push(clients[mac]);
			}
		});
		\$scope.status = s;
	}
	\$scope.update();
	setInterval(\$scope.update, 5000);
}
</script>

<!-- vim: filetype=html
-->
