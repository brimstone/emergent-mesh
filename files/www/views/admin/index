<div class="container" ng-controller="PageCtrl">
<h1>Mesh</h1>
<input type="button" class="btn btn-{{(status.mode == 'Gateway') && 'success' || 'primary'}} meshmode" id="gateway" value="Gateway" />
<input type="button" class="btn btn-{{(status.mode == 'Standalone') && 'success' || 'primary'}} meshmode" id="standalone" value="Standalone" />
<input type="button" class="btn btn-{{(status.mode == 'Client') && 'success' || 'primary'}} meshmode" id="client" value="Client" />

<div ng-repeat="node in nodekeys">
	<div class="row">
		<div class="col-sm-3">
			<h2>{{node}}</h2>
			{{nodes[node].mode}}
			<!-- TODO Move buttons down here-->
		</div>
		<div class="col-sm-3">
			<h2>Load</h2>
			<!-- TODO add this to nodeadm -->
		</div>
		<div class="col-sm-3">
			<h2>Memory</h2>
			<!-- TODO Find a good gauge -->
			{{nodes[node].memory.used}}
			{{nodes[node].memory.total}}
		</div>
		<div class="col-sm-3">
			<h2>Flash</h2>
			<!-- TODO Find a good gauge -->
			{{nodes[node].flash.used}}
			{{nodes[node].flash.total}}
		</div>
	</div>
	<div class="row">
		<div class="col-sm-12">
			<table class="table table-bordered table-hover">
			<tr>
				<th>MAC</th>
				<th>IP</th>
				<th>Time Authorized</th>
				<th>Signal</th>
				<th>Bitrate</th>
			</tr>
				<tr ng-repeat="client in nodes[node].clients">
					<td>{{client.mac}}</td>
					<td>{{client.ip}}</td>
					<td>{{client.time}}</td>
					<td>{{client.signal}} dB</td>
					<td>{{client.bitrate}} mbps</td>
				</tr>
			</table>
	</div>
</div>


<script>
/*
\$(function() {
	var d = new Date();
	var s = parseInt(d.getTime() / 1000) - $(date +%s);
	console.log("Time is " + (s - $(date +%s)) + " seconds off");
	\$("body > .container").prepend('<div class="alert alert-error"><button type="button" class="close" data-dismiss="alert">&times;</button>Time is ' + s + ' seconds off. <input type="button" class="btn btn-small" id="btnTime" value="Fix it!"/></div>');
	\$("#btnTime").click(function() {
		var d = new Date();
		$.getJSON("/admin/time/" + parseInt(d.getTime() / 1000) + "/", function(data) {
			console.log(data);
		});
	});
});
*/

angular.module('WebUI', ['ngResource']);
function PageCtrl(\$scope, \$resource) {
	\$scope.admin = \$resource('/:action');
	\$scope.db = \$resource('/db/:action');
	\$scope.update = function () {
		var s = \$scope.db.get({action: "status"}, function() {
			\$scope.nodes = {};
			\$scope.nodekeys = [];
			for (var key in s) {
				if (key.substr(0,1) == '\$') {
					continue;
				}
				\$scope.nodekeys.push(key);
				\$scope.nodes[key] = s[key];
				// start our flattened clients hash, indexed by mac address
				var clients = {};
				//loop through arp entries and flip them around
				for(var mac in s[key].arp) {
					if (!clients[mac]) { clients[mac] = {}};
					clients[mac].ip = s[key].arp[mac].ip;
				}
				for(var mac in s[key].captive) {
					if (!clients[mac]) { clients[mac] = {}};
					clients[mac].ip = s[key].captive[mac].ip;
					clients[mac].time = s[key].captive[mac].time;
				}
				for(var mac in s[key].station) {
					if (!clients[mac]) { clients[mac] = {}};
					clients[mac].signal = s[key].station[mac].signal;
					clients[mac].bitrate = s[key].station[mac].bitrate;
				}
				for(var mac in clients) {
					clients[mac].mac = mac;
					if (!clients[mac].signal) { clients[mac].signal = 0; }
					if (!clients[mac].bitrate) { clients[mac].bitrate = 0; }
					if (!clients[mac].time) { clients[mac].time = 0; }
				}
				\$scope.nodes[key].clients=clients;
				delete \$scope.nodes[key].arp;
				delete \$scope.nodes[key].captive;
				delete \$scope.nodes[key].station;
			}
			console.log(\$scope.nodes);
		});
	}
	\$scope.update();
	setInterval(\$scope.update, 5000);
}
</script>

<!-- vim: filetype=html
-->
