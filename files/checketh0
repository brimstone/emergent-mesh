#!/bin/sh

nolink() {
	ethtool eth0 | grep -q "Link detected: no"
}

isclient() {
	batctl gw | grep -q "client"
}

isserver() {
	batctl gw | grep -q "server"
}

nogateways() {
	batctl gwl | grep -q "No gateways in range"
}

isrunning() {
	pidof "$1" >/dev/null
}

blink() {
	echo "timer" > /sys/devices/platform/leds-gpio/leds/tp-link\:blue\:system/trigger
}

solid() {
	echo "default-on" > /sys/devices/platform/leds-gpio/leds/tp-link\:blue\:system/trigger
}


isrouting() {
	iptables -t nat -vnL | grep -q MASQ
}

logit() {
	echo "$(date) $1" >> /tmp/checketh0
}

if ! isrouting; then
	# set iptables rules
	iptables -t nat -F POSTROUTING
	iptables -t nat -A POSTROUTING -s $(ip -o addr show dev br-lan | awk '/inet / {print $4}') -j MASQUERADE
	# set kernel forwarder
	echo 1 > /proc/sys/net/ipv4/ip_forward
	logit "Setting up routing"
fi

# if we have a link
if ! nolink; then
	logit "has a link"
	# be a gateway
	solid
	isserver || batctl gw server
	# hand out ips
	isrunning dnsmasq ||  /etc/init.d/dnsmasq start
	# we're done here
	exit
fi

# if we're a server
if isserver; then
	# so, we're a server without a link
	# if there are other gateways on the network that aren't us
	logit "is a server"
	if ! nogateways; then
		# be a client and bail
		blink
		batctl gw client
		logit "has gateways"
		exit
	fi
	logit "No other gateways"
	exit
fi

# pick a random number between 0 and 9
# if it's 0
if nogateways && [ $(( $RANDOM % 10 )) = 0 ]; then
	# become a server
	solid
	batctl gw server
	# TODO fake routing
	# TODO fake dns stuff
	logit "now a server"
	# start handing out IPs
	/etc/init.d/dnsmasq start
	exit
fi

# we don't have a link
# we're not already a server
# we didn't just become a server
# make us a client
blink
batctl gw client
logit "now a client"
